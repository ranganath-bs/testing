#!/bin/bash

export REGION="eu-west-1"
export ACCOUNT="079149401785"
#export SGID="sg-004d389660e04e6c9"
export SGID="sg-004d389660e04e6c9"

###############################################################################
##
## Gather SRC_LOCATION_ID
##
echo "Do we need to create a source location ID (Y/N)"
read Q_SRC_LOC_ID

if [[ "${Q_SRC_LOC_ID}" = "Y" || "${Q_SRC_LOC_ID}" = "y" ]]; then

echo -e "\n Please provide the source Filesystem ID \n"
read SRC_FSID

echo -e "\n Please Provide the source directory name \n"
read SRC_DIR


SRC_ARN=$( aws fsx describe-file-systems --file-system-id ${SRC_FSID} | grep ResourceARN | awk '{print $2}' | sed 's/"//g' | sed 's/,//' )
SRC_LOCATION_ID=$( aws datasync create-location-fsx-lustre --fsx-filesystem-arn ${SRC_ARN} --security-group-arns arn:aws:ec2:${REGION}:${ACCOUNT}:security-group/${SGID} --subdirectory=${SRC_DIR} | grep LocationArn | awk '{print $2}' | sed 's/"//g' )

echo "SRC_LOCATION_ID = ${SRC_LOCATION_ID}"
else
echo "The source location ID has apparently already been created previously"
echo "Please provide the SRC_LOCATION_ID"
read SRC_LOCATION_ID

fi

###############################################################################
##
## Gather DST_LOCATION_ID
##
echo "Do we need to create a destination location ID (Y/N)"
read Q_DST_LOC_ID

if [[ "${Q_DST_LOC_ID}" = "Y" || "${Q_DST_LOC_ID}" = "y" ]]; then

echo -e "\n Please provide the source Filesystem ID \n"
read DST_FSID

echo -e "\n Please Provide the source directory name \n"
read DST_DIR


DST_ARN=$( aws fsx describe-file-systems --file-system-id ${DST_FSID} | grep ResourceARN | awk '{print $2}' | sed 's/"//g' | sed 's/,//' )
DST_LOCATION_ID=$( aws datasync create-location-fsx-lustre --fsx-filesystem-arn ${DST_ARN} --security-group-arns arn:aws:ec2:${REGION}:${ACCOUNT}:security-group/${SGID} --subdirectory=${DST_DIR} | grep LocationArn | awk '{print $2}' | sed 's/"//g' )

echo "DST_LOCATION_ID = ${DST_LOCATION_ID}"
else
    echo "The source location ID has apparently already been created previously"
    echo "Please provide the DST_LOCATION_ID"
    read DST_LOCATION_ID
fi

echo
#echo "Please provide the directory that's to be transferred (e.g. fdipglob_scratch)"
#read DIR

###############################################################################
##
## 3) Create a log location
##
aws logs create-log-group --log-group-name "/aws/datasync/${DIR}/"


###############################################################################
##
## 4) Create task
##
# echo aws datasync create-task --source-location-arn "${SRC_LOCATION_ID}" --destination-location-arn "${DST_LOCATION_ID}" --name ${DIR}_task --includes FilterType=SIMPLE_PATTERN,Value="/${DIR}" --cloud-watch-log-group-arn "arn:aws:logs:${REGION}:${ACCOUNT}:log-group:/aws/datasync/${DIR}/" --options VerifyMode=ONLY_FILES_TRANSFERRED,OverwriteMode=ALWAYS,Atime=BEST_EFFORT,Mtime=PRESERVE,Uid=INT_VALUE,Gid=INT_VALUE,PreserveDevices=NONE,PosixPermissions=PRESERVE,PreserveDeletedFiles=REMOVE,TaskQueueing=ENABLED,LogLevel=BASIC,TransferMode=CHANGED,BytesPerSecond=-1 \| grep TaskExecutionArn \| awk '{print $2}' \| sed 's/"//g'

#TASK_ARN=$(aws datasync create-task --source-location-arn "${SRC_LOCATION_ID}" --destination-location-arn "${DST_LOCATION_ID}" --name ${DIR}_task --includes FilterType=SIMPLE_PATTERN,Value="/${DIR}" --cloud-watch-log-group-arn "arn:aws:logs:${REGION}:${ACCOUNT}:log-group:/aws/datasync/${DIR}/" --options VerifyMode=ONLY_FILES_TRANSFERRED,OverwriteMode=ALWAYS,Atime=BEST_EFFORT,Mtime=PRESERVE,Uid=INT_VALUE,Gid=INT_VALUE,PreserveDevices=NONE,PosixPermissions=PRESERVE,PreserveDeletedFiles=REMOVE,TaskQueueing=ENABLED,LogLevel=BASIC,TransferMode=CHANGED,BytesPerSecond=-1 | grep TaskArn | awk '{print $2}' | sed 's/"//g')
#TASK_ARN=$(aws datasync create-task --source-location-arn "${SRC_LOCATION_ID}" --destination-location-arn "${DST_LOCATION_ID}" --name ${DIR}_task --includes FilterType=SIMPLE_PATTERN,Value="/${DIR}" --options VerifyMode=ONLY_FILES_TRANSFERRED,OverwriteMode=ALWAYS,Atime=BEST_EFFORT,Mtime=PRESERVE,Uid=INT_VALUE,Gid=INT_VALUE,PreserveDevices=NONE,PosixPermissions=PRESERVE,PreserveDeletedFiles=REMOVE,TaskQueueing=ENABLED,TransferMode=CHANGED,BytesPerSecond=-1 | grep TaskArn | awk '{print $2}' | sed 's/"//g')

TASK_ARN=$(aws datasync create-task --source-location-arn "${SRC_LOCATION_ID}" --destination-location-arn "${DST_LOCATION_ID}" --name ${DST_DIR} --options VerifyMode=ONLY_FILES_TRANSFERRED,OverwriteMode=ALWAYS,Atime=BEST_EFFORT,Mtime=PRESERVE,Uid=INT_VALUE,Gid=INT_VALUE,PreserveDevices=NONE,PosixPermissions=PRESERVE,PreserveDeletedFiles=REMOVE,TaskQueueing=ENABLED,TransferMode=CHANGED,BytesPerSecond=-1 | grep TaskArn | awk '{print $2}' | sed 's/"//g')

echo "TASK_ARN = ${TASK_ARN}"


#aws datasync start-task-execution --task-arn "${TASK_ARN}"
